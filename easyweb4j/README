版本 0.1
支持特性：
1.IOC（@Controller、@Service、@Autowired，使用BeanHelper获取BeanMap）
2.AOP/Proxy（@Aspect注解切面类，继承AspectProxy实现切面）
3.restful
4.事务（@Tns）
5.文件上传（多文件、单文件FileParam）
6.主动规避重复action（如果定义了相同的action，框架初始化会报错）
7.路径参数pathParam，多拼参数，类似 /get/{id}_{name} 这样
8.actionMethod 方法参数的随意化，支持HttpRequest、HttpResponse、Param 注入。
9.过滤器 ，实现Filter，支持filter链（有序），支持在Controller上或Controller方法上@FilterFuckOff排除Filter


待加入特性列表
3.权限验证
4.文件下载
5.TODO列表
7.多数据源
8.支持jpa

约定(玩游戏，熟悉了按键操作，才能玩的起来，好的约定，是为了更加的方便)：
1.Request.value 也就是url 只支持字母加数字，理论上也够用了，因此，url的 pathParam 变量名只支持 字母数字，这点框架启动会检测。
2.post请求的payload 只支持json格式，不能是数组，key必须用英文双引号包围，value 必须区分数字字符串，如果是字符串纯字母，必须双引号包围。总之按规范来。
这样是可以的：{"key":"value"} 或者 {"key":[{"subkey":"subvalue"}]} 等json格式
这样不可以：[{"key":"value"}] 
3.下面的请求作为例子
这样是可以的(查询参数可以是中文，随意)：http://localhost:8080/getOne/zhangjiagang/123_zhangsan/detail?p1=123&p2=张家港
这样是不可以的(404，路径请不要含有非字母、数字、下划线、$以外的字符)：http://localhost:8080/getOne/张家港/123_zhangsan/detail?p1=123&p2=张家港
第二种匹配是什么鬼!这是实际运行时
决定的，这点框架启动时无法检测，只能不匹配路径返回404。
4.controller中的action处理方法，也就是加了@Request注解的方法，携带的参数，如果请求中能够取到，就自动赋值，如果请求中没有，默认为null。有些框架是会强制参数个数的，easyweb4j不做参数个数强制。
因为默认是赋值null，所以参数不可以是基本类型的小写形式(语法糖)，因为这样是不能赋值null的，这点框架启动会检测。
5.controller中的action方法参数，对于链表类型，只能用List<?>、List<Object>、List<String>，这点框架启动无法检测到，所以要开发时候注意。
其实List<?>、List<Object>、List<String>是一回事，因为无法运行时判断List泛型，而虚拟机执行get后也是按照目标类型强转，所以暂时只能做到这样，其实元素都是String。
